/*

Don't alter this file, it was generated.

*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "code.cloudfoundry.org/cf-operator/pkg/kube/apis/extendedstatefulset/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ExtendedStatefulSetLister helps list ExtendedStatefulSets.
type ExtendedStatefulSetLister interface {
	// List lists all ExtendedStatefulSets in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ExtendedStatefulSet, err error)
	// ExtendedStatefulSets returns an object that can list and get ExtendedStatefulSets.
	ExtendedStatefulSets(namespace string) ExtendedStatefulSetNamespaceLister
	ExtendedStatefulSetListerExpansion
}

// extendedStatefulSetLister implements the ExtendedStatefulSetLister interface.
type extendedStatefulSetLister struct {
	indexer cache.Indexer
}

// NewExtendedStatefulSetLister returns a new ExtendedStatefulSetLister.
func NewExtendedStatefulSetLister(indexer cache.Indexer) ExtendedStatefulSetLister {
	return &extendedStatefulSetLister{indexer: indexer}
}

// List lists all ExtendedStatefulSets in the indexer.
func (s *extendedStatefulSetLister) List(selector labels.Selector) (ret []*v1alpha1.ExtendedStatefulSet, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ExtendedStatefulSet))
	})
	return ret, err
}

// ExtendedStatefulSets returns an object that can list and get ExtendedStatefulSets.
func (s *extendedStatefulSetLister) ExtendedStatefulSets(namespace string) ExtendedStatefulSetNamespaceLister {
	return extendedStatefulSetNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ExtendedStatefulSetNamespaceLister helps list and get ExtendedStatefulSets.
type ExtendedStatefulSetNamespaceLister interface {
	// List lists all ExtendedStatefulSets in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ExtendedStatefulSet, err error)
	// Get retrieves the ExtendedStatefulSet from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ExtendedStatefulSet, error)
	ExtendedStatefulSetNamespaceListerExpansion
}

// extendedStatefulSetNamespaceLister implements the ExtendedStatefulSetNamespaceLister
// interface.
type extendedStatefulSetNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ExtendedStatefulSets in the indexer for a given namespace.
func (s extendedStatefulSetNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ExtendedStatefulSet, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ExtendedStatefulSet))
	})
	return ret, err
}

// Get retrieves the ExtendedStatefulSet from the indexer for a given namespace and name.
func (s extendedStatefulSetNamespaceLister) Get(name string) (*v1alpha1.ExtendedStatefulSet, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("extendedstatefulset"), name)
	}
	return obj.(*v1alpha1.ExtendedStatefulSet), nil
}
